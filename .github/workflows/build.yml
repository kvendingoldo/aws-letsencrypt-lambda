name: pipeline

on:
  push:
    branches:
      - 'main'
      - 'release/**'

env:
  image_repo: "kvendingoldo/aws-letsencrypt-lambda"

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.set_version.outputs.safe_version }}
    steps:
      -
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Set application version
        id: set_version
        uses: kvendingoldo/semver-action@v1.19
        with:
          primary_branch: main
          enable_github_releases: true
          github_token: "${{ secrets.GITHUB_TOKEN }}"
      -
        name: Login to Docker Hub registry
        uses: docker/login-action@v3
        with:
          registry: "registry.hub.docker.com"
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      -
        name: Build and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            registry.hub.docker.com/${{ env.image_repo }}:latest
            registry.hub.docker.com/${{ env.image_repo }}:${{ steps.set_version.outputs.safe_version }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      -
        name: Build and push to GitHub package registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/${{ env.image_repo }}:latest
            ghcr.io/${{ env.image_repo }}:${{ steps.set_version.outputs.safe_version }}
      -
        name: Print image version
        run: echo ${{ steps.set_version.outputs.safe_version }}
